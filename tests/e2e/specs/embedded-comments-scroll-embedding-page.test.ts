/// <reference path="../test-types.ts"/>

import * as _ from 'lodash';
import assert = require('assert');
import fs = require('fs');
import server = require('../utils/server');
import utils = require('../utils/utils');
import { TyE2eTestBrowser } from '../utils/pages-for';
import settings = require('../utils/settings');
import make = require('../utils/make');
import logAndDie = require('../utils/log-and-die');
import c = require('../test-constants');

let maria: Member;
let mariasBrowser: TyE2eTestBrowser;
let strangersBrowser: TyE2eTestBrowser;

let idAddress: IdAddress;
let siteId: any;

const mariasCommentOne = 'mariasCommentOne';
const mariasCommentTwo = 'mariasCommentTwo';

const localHostname = 'comments-for-e2e-test-embscrl-localhost-8080';
const embeddingOrigin = 'http://e2e-test-embscrl.localhost:8080';
//const pageShortSlug = 'emb-cmts-short.html';
const pageTallSlug = 'emb-cmts-tall.html';
const pageTallerSlug = 'emb-cmts-taller.html';


describe("embedded-comments-scroll  TyT2K4DHR49", () => {

  it("initialize people", () => {
    mariasBrowser = new TyE2eTestBrowser(wdioBrowser);;
    maria = make.memberMaria();
  });

  it("import a site", () => {
    const site: SiteData = make.forumOwnedByOwen('embscrl', { title: "Emb Cmts Scroll Test" });
    site.meta.localHostname = localHostname;
    site.settings.allowEmbeddingFrom = embeddingOrigin;
    site.members.push(maria);
    idAddress = server.importSiteData(site);
    siteId = idAddress.id;
  });

  it("create two embedding pages", () => {
    const dir = 'target';
    //fs.writeFileSync(`${dir}/${pageShortSlug}`, makeHtml('short', 0, '#005'));
    fs.writeFileSync(`${dir}/${pageTallSlug}`, makeHtml('tall', 2000, '#405'));
    //fs.writeFileSync(`${dir}/${pageTallerSlug}`, makeHtml('taller', 5000, '#040'));
  });


  function makeHtml(pageName: string, extraHeight: number, bgColor: string): string {
    return `
<html>
<head>
<title>Embedded comments E2E test</title>
</head>
<body style="background: ${bgColor}; color: #ccc; font-family: monospace">
<p>Embedded comments E2E test page ${pageName}, and extra heigth: ${extraHeight}.<br>
Ok to delete.</p>
<div style="min-height:${extraHeight}px;">
<br><br>Extra height here.
${ extraHeight > 500 ? "<br><br><i>SCROLL DOWN\n:\n:\n:</i>" : ""}
<br><br>
</div>
<p>The comments: ("long ago" generated by the admin js bundle [2JKWTQ0])</p>

<script>talkyardCommentsServerUrl='${settings.scheme}://${localHostname}.localhost';</script>
<script async defer src="${settings.scheme}://${localHostname}.localhost/-/talkyard-comments.js"></script>
<div class="talkyard-comments" data-discussion-id="extra_height_${extraHeight}"
  style="margin-top: 45px;">

<p>/End of page.</p>
</body>
</html>`;
  }

  // TESTS_MISSING  emb cmts scroll

  it("Maria opens a tall embedding page, does *not* scroll to comment-1", () => {
    mariasBrowser.go(embeddingOrigin + '/' + pageTallSlug);
  });

  it("... the Log In button is not visible on screen", () => {
  });

  it("Maria opens tall embedding page, auto scrolls to comment-1  TyT2K4DHR49-05", () => {
    //mariasBrowser.go(embeddingOrigin + '/' + pageTallSlug + '#comment-1');
  });

  it("... now the Log In button is visible directly", () => {

  });

  it("Maria clicks Log In  TyT2K4DHR49-02", () => {
    //mariasBrowser.switchToEmbeddedCommentsIrame();
    //mariasBrowser.loginDialog.loginWithPasswordInPopup(maria);
  });

  function markCommentsRead() {
    mariasBrowser.execute(function() {
      localStorage.setItem('debikiPostNrsReadByPageId', "{\"1\":[2,3],\"2\":[2,3]}");
    });
  }

  it("... and reads comments 1 and 2 (posts 2 and 3)", () => {
    //markCommentsRead();
  });

  it("She reloads the page", () => {
  });

  it("... it won't auto-scroll to last reading position (reading the blog post = higher prio)", () => {
  });


});

